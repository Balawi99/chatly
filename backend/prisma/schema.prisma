// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  password       String
  name           String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  widgets        Widget[]
  conversations  Conversation[]
  messages       Message[]
}

model Widget {
  id             String    @id @default(uuid())
  name           String
  color          String    @default("#3B82F6") // Default blue color
  position       String    @default("right")
  welcomeMessage String    @default("Hello! How can I help you today?")
  userId         String
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  conversations  Conversation[]
}

model Conversation {
  id             String    @id @default(uuid())
  visitorId      String?   // Anonymous visitor ID
  widgetId       String
  widget         Widget    @relation(fields: [widgetId], references: [id], onDelete: Cascade)
  userId         String
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  messages       Message[]
}

model Message {
  id             String    @id @default(uuid())
  content        String
  isFromVisitor  Boolean   @default(false)
  isAiGenerated  Boolean   @default(false)
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  userId         String?
  user           User?     @relation(fields: [userId], references: [id], onDelete: SetNull)
  createdAt      DateTime  @default(now())
}

model KnowledgeBase {
  id             String    @id @default(uuid())
  title          String
  content        String
  userId         String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
} 